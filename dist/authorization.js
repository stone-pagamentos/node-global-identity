"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var axios_1 = require("axios");
var Authorization = /** @class */ (function () {
    function Authorization(applicationKey, baseURL) {
        this.applicationKey = applicationKey;
        this.baseURL = baseURL;
        this.baseURL += '/authorization';
    }
    Authorization.prototype.getURL = function (endpoint) {
        return this.baseURL + endpoint;
    };
    /**
     * @param email user email to be authenticated
     * @param password user password to be authenticated
     * @param tokenExpirationTime the duration of the auth token in minutes
     */
    Authorization.prototype.authenticateUser = function (email, password, tokenExpirationTime) {
        if (tokenExpirationTime === void 0) { tokenExpirationTime = 2880; }
        var endpoint = '/authenticate';
        var body = {
            Email: email,
            Password: password,
            ApplicationKey: this.applicationKey,
            TokenExpirationInMinutes: tokenExpirationTime
        };
        return axios_1.default
            .post(this.getURL(endpoint), body)
            .then(function (result) { return result.data; });
    };
    /**
     * Validates a token generated by the Authenticate resource.
     * You must call the ValidateToken resource before any call
     * to a critical section of your application, to ensure the
     * authenticity of the credentials
     * @param token The authentication token generated by the Authenticate resource, to be validated
     */
    Authorization.prototype.validateToken = function (token) {
        var endpoint = '/validateToken';
        var body = {
            ApplicationKey: this.applicationKey,
            Token: token
        };
        return axios_1.default
            .post(this.getURL(endpoint), body)
            .then(function (result) { return result.data; });
    };
    /**
     * Extends the duration of a existing token generated by the Authenticate resource.
     * You must call the RenewToken resource before yout actual token expires or the
     * request is going to fail.
     * @param oldToken The actual authentication token generated by the Authenticate resource
     */
    Authorization.prototype.renewToken = function (oldToken, tokenExpirationTime) {
        var endpoint = '/renewToken';
        var body = {
            ApplicationKey: this.applicationKey,
            Token: oldToken
        };
        if (tokenExpirationTime) {
            body.TokenExpirationInMinutes = tokenExpirationTime;
        }
        return axios_1.default
            .post(this.getURL(endpoint), body)
            .then(function (result) { return result.data; });
    };
    /**
     * Check if a user belongs to one or more of the specified roles
     * @param userKey Unique global key identifying the user to be checked
     * @param roles array of roles to check
     */
    Authorization.prototype.isUserInRoles = function (userKey, roles) {
        var endpoint = '/isUserInRole';
        if (!roles || roles.length < 1) {
            return Promise.reject(new Error('You must provide the user roles to be verified!'));
        }
        var body = {
            ApplicationKey: this.applicationKey,
            UserKey: userKey,
            RoleCollection: roles
        };
        return axios_1.default
            .post(this.getURL(endpoint), body)
            .then(function (result) { return result.data; });
    };
    /**
     * Sends an email to the user containing instructions on how to redefine his password
     * @param email E-mail of the user requesting the password recovery
     */
    Authorization.prototype.recoverPassword = function (email) {
        var endpoint = '/recoverPassword';
        var body = {
            ApplicationKey: this.applicationKey,
            Email: email
        };
        return axios_1.default
            .post(this.getURL(endpoint), body)
            .then(function (result) { return result.data; });
    };
    return Authorization;
}());
exports.Authorization = Authorization;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aG9yaXphdGlvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9hdXRob3JpemF0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBTUEsK0JBQXlCO0FBRXpCO0lBQ0UsdUJBQXFCLGNBQXNCLEVBQVUsT0FBZTtRQUEvQyxtQkFBYyxHQUFkLGNBQWMsQ0FBUTtRQUFVLFlBQU8sR0FBUCxPQUFPLENBQVE7UUFDbEUsSUFBSSxDQUFDLE9BQU8sSUFBSSxnQkFBZ0IsQ0FBQTtJQUNsQyxDQUFDO0lBRU8sOEJBQU0sR0FBZCxVQUFnQixRQUFnQjtRQUM5QixNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sR0FBRyxRQUFRLENBQUE7SUFDaEMsQ0FBQztJQUVEOzs7O09BSUc7SUFDSSx3Q0FBZ0IsR0FBdkIsVUFDRSxLQUFhLEVBQUUsUUFBZSxFQUM5QixtQkFBMEI7UUFBMUIsb0NBQUEsRUFBQSwwQkFBMEI7UUFHMUIsSUFBTSxRQUFRLEdBQUcsZUFBZSxDQUFBO1FBQ2hDLElBQU0sSUFBSSxHQUFHO1lBQ1gsS0FBSyxFQUFFLEtBQUs7WUFDWixRQUFRLEVBQUUsUUFBUTtZQUNsQixjQUFjLEVBQUUsSUFBSSxDQUFDLGNBQWM7WUFDbkMsd0JBQXdCLEVBQUUsbUJBQW1CO1NBQzlDLENBQUE7UUFFRCxNQUFNLENBQUMsZUFBSzthQUNULElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxFQUFFLElBQUksQ0FBQzthQUNqQyxJQUFJLENBQUMsVUFBQSxNQUFNLElBQUksT0FBQSxNQUFNLENBQUMsSUFBSSxFQUFYLENBQVcsQ0FBQyxDQUFBO0lBQ2hDLENBQUM7SUFFRDs7Ozs7O09BTUc7SUFDSSxxQ0FBYSxHQUFwQixVQUFzQixLQUFhO1FBQ2pDLElBQU0sUUFBUSxHQUFHLGdCQUFnQixDQUFBO1FBQ2pDLElBQU0sSUFBSSxHQUFHO1lBQ1gsY0FBYyxFQUFFLElBQUksQ0FBQyxjQUFjO1lBQ25DLEtBQUssRUFBRSxLQUFLO1NBQ2IsQ0FBQTtRQUVELE1BQU0sQ0FBQyxlQUFLO2FBQ1QsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLEVBQUUsSUFBSSxDQUFDO2FBQ2pDLElBQUksQ0FBQyxVQUFBLE1BQU0sSUFBSSxPQUFBLE1BQU0sQ0FBQyxJQUFJLEVBQVgsQ0FBVyxDQUFDLENBQUE7SUFDaEMsQ0FBQztJQUVEOzs7OztPQUtHO0lBQ0ksa0NBQVUsR0FBakIsVUFBbUIsUUFBZ0IsRUFBRSxtQkFBMkI7UUFDOUQsSUFBTSxRQUFRLEdBQUcsYUFBYSxDQUFBO1FBQzlCLElBQU0sSUFBSSxHQUFRO1lBQ2hCLGNBQWMsRUFBRSxJQUFJLENBQUMsY0FBYztZQUNuQyxLQUFLLEVBQUUsUUFBUTtTQUNoQixDQUFBO1FBRUQsRUFBRSxDQUFDLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxDQUFDO1lBQ3hCLElBQUksQ0FBQyx3QkFBd0IsR0FBRyxtQkFBbUIsQ0FBQTtRQUNyRCxDQUFDO1FBRUQsTUFBTSxDQUFDLGVBQUs7YUFDVCxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsRUFBRSxJQUFJLENBQUM7YUFDakMsSUFBSSxDQUFDLFVBQUEsTUFBTSxJQUFJLE9BQUEsTUFBTSxDQUFDLElBQUksRUFBWCxDQUFXLENBQUMsQ0FBQTtJQUNoQyxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNJLHFDQUFhLEdBQXBCLFVBQXNCLE9BQWMsRUFBRSxLQUFlO1FBQ25ELElBQU0sUUFBUSxHQUFHLGVBQWUsQ0FBQTtRQUVoQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUssSUFBSSxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDL0IsTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSSxLQUFLLENBQUMsaURBQWlELENBQUMsQ0FBQyxDQUFBO1FBQ3JGLENBQUM7UUFFRCxJQUFNLElBQUksR0FBRztZQUNYLGNBQWMsRUFBRSxJQUFJLENBQUMsY0FBYztZQUNuQyxPQUFPLEVBQUUsT0FBTztZQUNoQixjQUFjLEVBQUUsS0FBSztTQUN0QixDQUFBO1FBRUQsTUFBTSxDQUFDLGVBQUs7YUFDVCxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsRUFBRSxJQUFJLENBQUM7YUFDakMsSUFBSSxDQUFDLFVBQUEsTUFBTSxJQUFJLE9BQUEsTUFBTSxDQUFDLElBQUksRUFBWCxDQUFXLENBQUMsQ0FBQTtJQUNoQyxDQUFDO0lBRUQ7OztPQUdHO0lBQ0ksdUNBQWUsR0FBdEIsVUFBd0IsS0FBWTtRQUNsQyxJQUFNLFFBQVEsR0FBRyxrQkFBa0IsQ0FBQTtRQUNuQyxJQUFNLElBQUksR0FBRztZQUNYLGNBQWMsRUFBRSxJQUFJLENBQUMsY0FBYztZQUNuQyxLQUFLLEVBQUUsS0FBSztTQUNiLENBQUE7UUFFRCxNQUFNLENBQUMsZUFBSzthQUNULElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxFQUFFLElBQUksQ0FBQzthQUNqQyxJQUFJLENBQUMsVUFBQSxNQUFNLElBQUksT0FBQSxNQUFNLENBQUMsSUFBSSxFQUFYLENBQVcsQ0FBQyxDQUFBO0lBQ2hDLENBQUM7SUFDSCxvQkFBQztBQUFELENBQUMsQUEvR0QsSUErR0M7QUEvR2Esc0NBQWEifQ==