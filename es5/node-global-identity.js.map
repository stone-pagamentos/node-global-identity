{"version":3,"sources":["../lib/node-global-identity.js"],"names":[],"mappings":"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","file":"node-global-identity.js","sourcesContent":["import request from 'request-promise';\r\nimport { renameKeys } from 'string-helper';\r\n\r\nfunction _handleError(json, reject) {\r\n  const jsonOp = json.OperationReport[0];\r\n  return (jsonOp === undefined || jsonOp === null ?\r\n    reject({ message: 'No report' }) : reject({ message: jsonOp.Message }));\r\n}\r\n\r\nfunction _response(res, resolve, reject) {\r\n  const json = JSON.parse(res);\r\n\r\n  if (json.Success) {\r\n    delete json.OperationReport;\r\n    return resolve(renameKeys(json));\r\n  }\r\n\r\n  return _handleError(json, reject);\r\n}\r\n\r\nfunction _getHeaders() {\r\n  return { 'content-type': 'application/json' };\r\n}\r\n\r\nexport default function GlobalIdentity(obj = {}) {\r\n  const _this = this;\r\n  _this._apiKey = obj.apiKey;\r\n  _this._url = obj.url;\r\n\r\n  const _getUrl = (endpoint) => {\r\n    return _this._url + endpoint;\r\n  };\r\n\r\n  return {\r\n    setApiKey(apiKey) {\r\n      _this._apiKey = apiKey;\r\n    },\r\n\r\n    setUrl(url) {\r\n      _this._url = url;\r\n    },\r\n\r\n    authenticate(email, password) {\r\n      return new Promise((resolve, reject) => {\r\n        if (!_this._url) {\r\n          return reject({ message: 'Must have url' });\r\n        }\r\n\r\n        if (!_this._apiKey) {\r\n          return reject({ message: 'Must have an apiKey' });\r\n        }\r\n\r\n        if (!email) {\r\n          return reject({ message: 'Must have an email' });\r\n        }\r\n\r\n        if (!password) {\r\n          return reject({ message: 'Must have a password' });\r\n        }\r\n\r\n        const body = {\r\n          Email: email,\r\n          Password: password,\r\n          ApplicationKey: _this._apiKey,\r\n        };\r\n\r\n        return request({\r\n          method: 'POST',\r\n          uri: _getUrl('/api/Authorization/Authenticate'),\r\n          body: JSON.stringify(body),\r\n          headers: _getHeaders(),\r\n        }).then((res) => {\r\n          return _response(res, resolve, reject);\r\n        }).catch((err) => {\r\n          return _handleError(JSON.parse(err.error), reject);\r\n        });\r\n      });\r\n    },\r\n\r\n    validateToken(token) {\r\n      return new Promise((resolve, reject) => {\r\n        if (!_this._url) {\r\n          return reject({ message: 'Must have url' });\r\n        }\r\n\r\n        if (!_this._apiKey) {\r\n          return reject({ message: 'Must have an apiKey' });\r\n        }\r\n\r\n        if (!token) {\r\n          return reject({ message: 'Must have a token' });\r\n        }\r\n\r\n        const body = {\r\n          ApplicationKey: _this._apiKey,\r\n          Token: token,\r\n        };\r\n\r\n        return request({\r\n          method: 'POST',\r\n          uri: _getUrl('/api/Authorization/ValidateToken'),\r\n          body: JSON.stringify(body),\r\n          headers: _getHeaders(),\r\n        }).then((res) => {\r\n          return _response(res, resolve, reject);\r\n        }).catch((err) => {\r\n          return _handleError(JSON.parse(err.error), reject);\r\n        });\r\n      });\r\n    },\r\n\r\n    checkRolePermission(userKey, roles) {\r\n      return new Promise((resolve, reject) => {\r\n        if (!_this._url) {\r\n          return reject({ message: 'Must have url' });\r\n        }\r\n\r\n        if (!_this._apiKey) {\r\n          return reject({ message: 'Must have an apiKey' });\r\n        }\r\n\r\n        if (!userKey) {\r\n          return reject({ message: 'Must have an userKey' });\r\n        }\r\n\r\n        if (!roles) {\r\n          return reject({ message: 'Must have a role' });\r\n        }\r\n\r\n        const body = {\r\n          ApplicationKey: _this._apiKey,\r\n          UserKey: userKey,\r\n          RoleCollection: roles,\r\n        };\r\n\r\n        return request({\r\n          method: 'POST',\r\n          uri: _getUrl('/api/Authorization/IsUserInRole'),\r\n          body: JSON.stringify(body),\r\n          headers: _getHeaders(),\r\n        }).then((res) => {\r\n          // const json = JSON.parse(res);\r\n          // delete json.OperationReport;\r\n          // return resolve(renameKeys(json));\r\n          return _response(res, resolve, reject);\r\n        }).catch((err) => {\r\n          return _handleError(JSON.parse(err.error), reject);\r\n        });\r\n      });\r\n    },\r\n\r\n    isAuthenticated() {\r\n      return (req, res, next) => {\r\n        if (!req.headers.authorization) {\r\n          return res.status(401).json({ error: { message: 'Invalid token' } });\r\n        }\r\n\r\n        const [authType, token] = req.headers.authorization.split(' ');\r\n\r\n        if (!authType || !token) {\r\n          return res.status(401).json({ error: { message: 'Invalid token' } });\r\n        }\r\n\r\n        return this.validateToken(token).then((result) => {\r\n          req.user = Object.assign(result, { token });\r\n          return next();\r\n        }).catch(() => {\r\n          return res.status(401).json({ error: { message: 'Invalid token' } });\r\n        });\r\n      };\r\n    },\r\n  };\r\n}\r\n"]}